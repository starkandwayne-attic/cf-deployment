---
meta:
  cf:
    consul:
      servers: (( grab jobs.consul_z1.networks.cf1.static_ips jobs.consul_z2.networks.cf2.static_ips jobs.consul_z3.networks.cf3.static_ips ))
    gorouter:
      servers: (( grab jobs.router_z1.networks.router1.static_ips jobs.router_z2.networks.router2.static_ips ))
    cf-etcd:
      servers: (( grab jobs.etcd_z1.networks.cf1.static_ips jobs.etcd_z2.networks.cf2.static_ips jobs.etcd_z3.networks.cf3.static_ips ))
      cluster:
      - instances: 1
        name: etcd_z1
      - instances: 1
        name: etcd_z2
      - instances: 1
        name: etcd_z3
    nats:
      servers: (( grab jobs.nats_z1.networks.cf1.static_ips jobs.nats_z2.networks.cf2.static_ips ))
    db:
      servers: (( grab jobs.postgres_z1.networks.cf1.static_ips jobs.postgres_z2.networks.cf2.static_ips ))
    uaadb:
      host: (( grab jobs.postgres_z1.networks.cf1.static_ips.0 ))
      scheme: postgresql
      user: uaaadmin
      pass: (( vault meta.vault_prefix "/uaadb:password" ))
      port: (( grab properties.postgres.config.port ))
    ccdb:
      host: (( grab jobs.postgres_z1.networks.cf1.static_ips.0 ))
      scheme: postgres
      pass: (( vault meta.vault_prefix "/ccdb:password" ))
      user: ccadmin
      port: (( grab properties.postgres.config.port ))
    diegodb:
      host: (( grab jobs.postgres_z1.networks.cf1.static_ips.0 ))
      scheme: postgres
      pass: (( vault meta.vault_prefix "/diegodb:password" ))
      user: diegoadmin
      port: (( grab properties.postgres.config.port ))
    routingdb:
      host: (( grab jobs.postgres_z1.networks.cf1.static_ips.0 ))
      scheme: postgres
      pass: (( vault meta.vault_prefix "/routingdb:password" ))
      user: routingadmin
      port: (( grab properties.postgres.config.port ))

    blobstore_config:
      blobstore_type: fog
      webdav_config: ~
      fog_connection:
        provider: OpenStack
        openstack_username: (( param "What is the user name for your OpenStack?" ))
        openstack_api_key: (( param "What is the password for your OpenStack?" ))
        openstack_auth_url: (( param "What is the auth url for your OpenStack?" ))
        openstack_temp_url_key: (( param "What is account meta temp url key for your OpenStack?" ))

    creds:
      blobstore: ~

properties:
  nfs_server: ~
  blobstore: ~
  pgpool:
    databases:
    - name: (( grab meta.cf.ccdb.dbname ))
      users:
      - (( grab meta.cf.ccdb.user ))
      extensions:
      - citext
      - pgcrypto
    - name: (( grab meta.cf.uaadb.dbname ))
      users:
      - (( grab meta.cf.uaadb.user ))
      extensions:
      - citext
      - pgcrypto
    - name: (( grab meta.cf.diegodb.dbname ))
      users:
      - (( grab meta.cf.diegodb.user ))
      extensions:
      - citext
      - pgcrypto
    - name: (( grab meta.cf.routingdb.dbname ))
      users:
      - (( grab meta.cf.routingdb.user ))
      extensions:
      - citext
      - pgcrypto
    users:
    - username: (( grab meta.cf.uaadb.user ))
      password: (( grab meta.cf.uaadb.pass ))
    - username: (( grab meta.cf.ccdb.user ))
      password: (( grab meta.cf.ccdb.pass ))
    - username: (( grab meta.cf.diegodb.user ))
      password: (( grab meta.cf.diegodb.pass ))
    - username: (( grab meta.cf.routingdb.user ))
      password: (( grab meta.cf.routingdb.pass ))
  postgres:
    config:
      port: 5432
    hba:
    - host all all 0.0.0.0/0 md5
    - host all all ::/0 md5
    replication:
      enabled: true
      master: (( grab meta.cf.db.servers.0 ))
      pool: (( grab meta.cf.db.servers ))
