---
meta:
  jobs:
    consul:
      persistent_disk_pool: small
    etcd:
      persistent_disk_pool: small
    postgres:
      persistent_disk_pool: ~  # not used
    nfs:
      persistent_disk_pool: ~  # not used
    blobstore:
      persistent_disk_pool: ~  # not used

jobs:
- name: consul_z1
  instances: 1
  .: (( inject meta.jobs.consul ))
  networks:
  - name: cf1
    static_ips: (( static_ips(10, 11, 12, 13, 14) ))
  resource_pool: small_z1
  properties:
    metron_agent:
      zone: z1
- name: consul_z2
  instances: 1
  .: (( inject meta.jobs.consul ))
  networks:
  - name: cf2
    static_ips: (( static_ips(10, 11, 12, 13, 14) ))
  resource_pool: small_z2
  properties:
    metron_agent:
      zone: z2
- name: consul_z3
  instances: 1
  .: (( inject meta.jobs.consul ))
  networks:
  - name: cf3
    static_ips: (( static_ips(10, 11, 12, 13, 14) ))
  resource_pool: small_z3
  properties:
    metron_agent:
      zone: z3
- name: nats_z1
  instances: 1
  .: (( inject meta.jobs.nats ))
  networks:
  - name: cf1
    static_ips: (( static_ips(0, 1, 2, 3, 4) ))
  properties:
    metron_agent:
      zone: z1
  resource_pool: small_z1
- name: nats_z2
  instances: 1
  .: (( inject meta.jobs.nats ))
  networks:
  - name: cf2
    static_ips: (( static_ips(0, 1, 2, 3, 4) ))
  properties:
    metron_agent:
      zone: z2
  resource_pool: small_z2
- name: etcd_z1
  instances: 1
  .: (( inject meta.jobs.etcd ))
  networks:
  - name: cf1
    static_ips: (( static_ips(5, 6, 7, 8, 9) ))
  properties:
    metron_agent:
      zone: z1
  resource_pool: small_z1
- name: etcd_z2
  instances: 1
  .: (( inject meta.jobs.etcd ))
  networks:
  - name: cf2
    static_ips: (( static_ips(5, 6, 7, 8, 9) ))
  properties:
    metron_agent:
      zone: z2
  resource_pool: small_z2
- name: etcd_z3
  instances: 1
  .: (( inject meta.jobs.etcd ))
  networks:
  - name: cf3
    static_ips: (( static_ips(5, 6, 7, 8, 9) ))
  properties:
    metron_agent:
      zone: z3
  resource_pool: small_z3
- name: uaa_z1
  instances: 1
  .: (( inject meta.jobs.uaa ))
  networks:
  - name: cf1
  properties:
    metron_agent:
      zone: z1
  resource_pool: small_z1
- name: uaa_z2
  instances: 1
  .: (( inject meta.jobs.uaa ))
  networks:
  - name: cf2
  properties:
    metron_agent:
      zone: z2
  resource_pool: small_z2
- name: api_z1
  instances: 1
  .: (( inject meta.jobs.api ))
  networks:
  - name: cf1
  properties:
    metron_agent:
      zone: z1
  resource_pool: small_z1
- name: api_z2
  instances: 1
  .: (( inject meta.jobs.api ))
  networks:
  - name: cf2
  properties:
    metron_agent:
      zone: z2
  resource_pool: small_z2
- name: api_worker_z1
  instances: 1
  .: (( inject meta.jobs.api_worker ))
  networks:
  - name: cf1
  properties:
    metron_agent:
      zone: z1
  resource_pool: small_z1
- name: api_worker_z2
  instances: 1
  .: (( inject meta.jobs.api_worker ))
  networks:
  - name: cf2
  properties:
    metron_agent:
      zone: z2
  resource_pool: small_z2
- name: clock_global
  instances: 1
  .: (( inject meta.jobs.clock ))
  networks:
  - name: cf1
  properties:
    metron_agent:
      zone: z1
  resource_pool: small_z1
- name: stats
  instances: 1
  .: (( inject meta.jobs.stats ))
  networks:
  - name: cf1
  properties:
    metron_agent:
      zone: z1
  resource_pool: small_z1
- name: hm9000_z1
  instances: 1
  .: (( inject meta.jobs.hm9000 ))
  networks:
  - name: cf1
  properties:
    metron_agent:
      zone: z1
  resource_pool: small_z1
- name: hm9000_z2
  instances: 1
  .: (( inject meta.jobs.hm9000 ))
  networks:
  - name: cf2
  properties:
    metron_agent:
      zone: z2
  resource_pool: small_z2
- name: runner_z1
  instances: 1
  .: (( inject meta.jobs.runner ))
  networks:
  - name: runner1
  properties:
    metron_agent:
      zone: z1
    dea_next:
      zone: z1
  resource_pool: runner_z1
- name: runner_z2
  instances: 1
  .: (( inject meta.jobs.runner ))
  networks:
  - name: runner2
  properties:
    metron_agent:
      zone: z2
    dea_next:
      zone: z2
  resource_pool: runner_z2
- name: loggregator_z1
  instances: 1
  .: (( inject meta.jobs.loggregator ))
  networks:
  - name: cf1
  properties:
    metron_agent:
      zone: z1
    doppler:
      zone: z1
  resource_pool: small_z1
- name: loggregator_z2
  instances: 1
  .: (( inject meta.jobs.loggregator ))
  networks:
  - name: cf2
  properties:
    metron_agent:
      zone: z2
    doppler:
      zone: z2
  resource_pool: small_z2
- name: doppler_z1
  instances: 1
  .: (( inject meta.jobs.doppler ))
  networks:
  - name: cf1
  properties:
    metron_agent:
      zone: z1
    doppler:
      zone: z1
  resource_pool: small_z1
- name: doppler_z2
  instances: 1
  .: (( inject meta.jobs.doppler ))
  networks:
  - name: cf2
  properties:
    metron_agent:
      zone: z2
    doppler:
      zone: z2
  resource_pool: small_z2
- name: loggregator_trafficcontroller_z1
  instances: 1
  .: (( inject meta.jobs.trafficcontroller ))
  networks:
  - name: cf1
  properties:
    metron_agent:
      zone: z1
    traffic_controller:
      zone: z1
  resource_pool: small_z1
- name: loggregator_trafficcontroller_z2
  instances: 1
  .: (( inject meta.jobs.trafficcontroller ))
  networks:
  - name: cf2
  properties:
    metron_agent:
      zone: z2
    traffic_controller:
      zone: z2
  resource_pool: small_z2
- name: router_z1
  instances: 1
  .: (( inject meta.jobs.router ))
  networks:
  - name: router1
    static_ips: (( static_ips(0, 1, 2, 3, 4) ))
  properties:
    metron_agent:
      zone: z1
  resource_pool: router_z1
- name: router_z2
  instances: 1
  .: (( inject meta.jobs.router ))
  networks:
  - name: router2
    static_ips: (( static_ips(0, 1, 2, 3, 4) ))
  properties:
    metron_agent:
      zone: z2
  resource_pool: router_z2
- name: acceptance_tests
  networks:
  - name: cf1
  resource_pool: errand
- name: smoke_tests
  networks:
  - name: cf1
  resource_pool: errand
